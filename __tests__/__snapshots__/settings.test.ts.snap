// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`actions is backwards-compatible with untagged command specs 1`] = `
{
  "afterAllMigrations": [
    {
      "_": "sql",
      "file": "foo.sql",
    },
    {
      "_": "sql",
      "file": "bar.sql",
    },
    {
      "_": "command",
      "command": "pg_dump --schema-only",
    },
    {
      "_": "command",
      "command": "graphile-worker --once",
    },
  ],
  "afterCurrent": [],
  "afterReset": [],
  "beforeAllMigrations": [],
  "beforeCurrent": [],
  "beforeReset": [],
  "blankMigrationContent": "-- Enter migration here
",
  "connectionString": "postgres://localhost:5432/dbname?ssl=true",
  "databaseName": "dbname",
  "databaseOwner": "dbname",
  "graphileMigrateSchema": "graphile_migrate",
  "logger": Logger {
    "_logFactory": [Function],
    "_scope": {},
    "log": [Function],
  },
  "manageGraphileMigrateSchema": true,
  "migrationsFolder": "./migrations",
  "placeholders": undefined,
  "rootConnectionString": "postgres:///template1",
  "shadowConnectionString": undefined,
  "shadowDatabaseName": undefined,
}
`;

exports[`actions parses SQL actions 1`] = `
{
  "afterAllMigrations": [
    {
      "_": "sql",
      "file": "bar.sql",
    },
    {
      "_": "sql",
      "file": "baz.sql",
    },
  ],
  "afterCurrent": [],
  "afterReset": [
    {
      "_": "sql",
      "file": "foo.sql",
    },
  ],
  "beforeAllMigrations": [],
  "beforeCurrent": [],
  "beforeReset": [],
  "blankMigrationContent": "-- Enter migration here
",
  "connectionString": "postgres://localhost:5432/dbname?ssl=true",
  "databaseName": "dbname",
  "databaseOwner": "dbname",
  "graphileMigrateSchema": "graphile_migrate",
  "logger": Logger {
    "_logFactory": [Function],
    "_scope": {},
    "log": [Function],
  },
  "manageGraphileMigrateSchema": true,
  "migrationsFolder": "./migrations",
  "placeholders": undefined,
  "rootConnectionString": "postgres:///template1",
  "shadowConnectionString": undefined,
  "shadowDatabaseName": undefined,
}
`;

exports[`actions parses command actions 1`] = `
{
  "afterAllMigrations": [
    {
      "_": "command",
      "command": "pg_dump --schema-only",
    },
    {
      "_": "command",
      "command": "graphile-worker --once",
    },
  ],
  "afterCurrent": [],
  "afterReset": [],
  "beforeAllMigrations": [],
  "beforeCurrent": [],
  "beforeReset": [],
  "blankMigrationContent": "-- Enter migration here
",
  "connectionString": "postgres://localhost:5432/dbname?ssl=true",
  "databaseName": "dbname",
  "databaseOwner": "dbname",
  "graphileMigrateSchema": "graphile_migrate",
  "logger": Logger {
    "_logFactory": [Function],
    "_scope": {},
    "log": [Function],
  },
  "manageGraphileMigrateSchema": true,
  "migrationsFolder": "./migrations",
  "placeholders": undefined,
  "rootConnectionString": "postgres:///template1",
  "shadowConnectionString": undefined,
  "shadowDatabaseName": undefined,
}
`;

exports[`actions parses mixed actions 1`] = `
{
  "afterAllMigrations": [
    {
      "_": "sql",
      "file": "foo.sql",
    },
    {
      "_": "sql",
      "file": "bar.sql",
    },
    {
      "_": "command",
      "command": "pg_dump --schema-only",
    },
    {
      "_": "command",
      "command": "graphile-worker --once",
    },
  ],
  "afterCurrent": [],
  "afterReset": [],
  "beforeAllMigrations": [],
  "beforeCurrent": [],
  "beforeReset": [],
  "blankMigrationContent": "-- Enter migration here
",
  "connectionString": "postgres://localhost:5432/dbname?ssl=true",
  "databaseName": "dbname",
  "databaseOwner": "dbname",
  "graphileMigrateSchema": "graphile_migrate",
  "logger": Logger {
    "_logFactory": [Function],
    "_scope": {},
    "log": [Function],
  },
  "manageGraphileMigrateSchema": true,
  "migrationsFolder": "./migrations",
  "placeholders": undefined,
  "rootConnectionString": "postgres:///template1",
  "shadowConnectionString": undefined,
  "shadowDatabaseName": undefined,
}
`;

exports[`actions parses string values into SQL actions 1`] = `
{
  "afterAllMigrations": [
    {
      "_": "sql",
      "file": "bar.sql",
    },
    {
      "_": "sql",
      "file": "baz.sql",
    },
  ],
  "afterCurrent": [],
  "afterReset": [
    {
      "_": "sql",
      "file": "foo.sql",
    },
  ],
  "beforeAllMigrations": [],
  "beforeCurrent": [],
  "beforeReset": [],
  "blankMigrationContent": "-- Enter migration here
",
  "connectionString": "postgres://localhost:5432/dbname?ssl=true",
  "databaseName": "dbname",
  "databaseOwner": "dbname",
  "graphileMigrateSchema": "graphile_migrate",
  "logger": Logger {
    "_logFactory": [Function],
    "_scope": {},
    "log": [Function],
  },
  "manageGraphileMigrateSchema": true,
  "migrationsFolder": "./migrations",
  "placeholders": undefined,
  "rootConnectionString": "postgres:///template1",
  "shadowConnectionString": undefined,
  "shadowDatabaseName": undefined,
}
`;
